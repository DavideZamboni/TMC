#!/bin/bash
#SBATCH --gres=gpu:2
#SBATCH -p gpuq
#SBATCH --mem-per-cpu=8000
#SBATCH --exclusive
#

# Generated by CHARMM-GUI (http://www.charmm-gui.org) v3.7

# This folder contains GROMACS formatted CHARMM36 force fields, a pre-optimized PDB structure, and GROMACS inputs.
# All input files were optimized for GROMACS 2019.2 or above, so lower version of GROMACS can cause some errors.
# We adopted the Verlet cut-off scheme for all minimization, equilibration, and production steps because it is 
# faster and more accurate than the group scheme. If you have a trouble with a performance of Verlet scheme while 
# running parallelized simulation, you should check if you are using appropriate command line.
# For MPI parallelizing, we recommand following command:
# mpirun -np $NUM_CPU gmx mdrun -ntomp 1

module load gromacs/single/gpu/2019.6
cd /home/amedeo.biasi/TMC1/tmc1_wt/gromacs/
init='step5_input'
rest_prefix='step5_input'
mini_prefix='step6.0_minimization'
prod_prefix='step7_production'
prod_step='step7'


# Minimization
# In the case that there is a problem during minimization using a single precision of GROMACS, please try to use 
# a double precision of GROMACS only for the minimization step.
gmx grompp -f $mini_prefix.mdp -o $mini_prefix.tpr -c $init.gro -r $rest_prefix.gro -p topol.top -n index.ndx
gmx mdrun -v -deffnm $mini_prefix

# Equilibration
cnt=1
cntmax=6

while [ $cnt -le  $cntmax ] 
do
istep='step6.'$cnt'_equilibration'
if [ $cnt -eq 1 ]
then
pstep=$mini_prefix
else
let i=$cnt-1
pstep='step6.'$i'_equilibration'
fi

gmx grompp -f $istep.mdp -o $istep.tpr -c $pstep.gro -r $rest_prefix.gro -p topol.top -n index.ndx
gmx mdrun -v -deffnm $istep
let cnt=$cnt+1
done
pstep='step6.6_equilibration'
# Production
name='TMC1_wt_npt'
gmx grompp -f $prod_prefix.mdp -o $name.tpr -c $pstep.gro -r $rest_prefix.gro -p topol.top -n index.ndx
gmx mdrun -v -deffnm $name
